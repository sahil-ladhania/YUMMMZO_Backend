
Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime
} = require('@prisma/client/runtime/edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userId: 'userId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password',
  phoneNumber: 'phoneNumber',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};
exports.Role = exports.$Enums.Role = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  COURIER: 'COURIER',
  ADMIN: 'ADMIN'
};

exports.Prisma.ModelName = {
  User: 'User'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/sahilladhania/Desktop/Poducts/YUMMMZO/YUMMMZO Code/BACKEND/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/sahilladhania/Desktop/Poducts/YUMMMZO/YUMMMZO Code/BACKEND/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "5.22.0",
  "engineVersion": "605197351a3c8bdd595af2d2a9bc3025bca48ea2",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Defining Models\nmodel User {\n  userId      Int      @id @default(autoincrement())\n  firstName   String   @db.VarChar(50)\n  lastName    String   @db.VarChar(100)\n  email       String   @unique @db.VarChar(100)\n  password    String\n  phoneNumber String\n  role        Role     @default(CUSTOMER)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @default(now())\n}\n\n// model Address {\n//   addressId              Int         @id @default(autoincrement())\n//   userId                 Int\n//   street                 String      @db.VarChar(500)\n//   apartment              String      @db.VarChar(500)\n//   city                   String      @db.VarChar(100)\n//   state                  String      @db.VarChar(100)\n//   postalCode             Int\n//   country                String      @db.VarChar(100)\n//   addressType            AddressType @default(HOME)\n//   createdAt              DateTime    @default(now())\n//   updatedAt              DateTime    @default(now())\n//   Restaurant             Restaurant? @relation(fields: [restaurantRestaurantId], references: [restaurantId])\n//   restaurantRestaurantId Int?\n// }\n//\n// model Cuisine {\n//   cuisineId   Int          @id @default(autoincrement())\n//   name        String       @unique @db.VarChar(100)\n//   description String       @db.VarChar(500)\n//   image       String\n//   cuisineType CuisineType\n//   restaurants Restaurant[]\n//   createdAt   DateTime     @default(now())\n//   updatedAt   DateTime     @default(now())\n// }\n//\n// model Restaurant {\n//   restaurantId   Int       @id @default(autoincrement())\n//   userId         Int\n//   restaurantName String    @db.VarChar(200)\n//   image          String\n//   totalReviews   Int       @default(0)\n//   ratings        Float     @default(0)\n//   isPureVeg      Boolean   @default(false)\n//   priceForTwo    Int\n//   deliveryTime   Int\n//   cuisines       Cuisine[]\n//   locations      Address[]\n//   menu           Menu[]\n//   openingTime    DateTime\n//   closingTime    DateTime\n//   createdAt      DateTime  @default(now())\n//   updatedAt      DateTime  @default(now())\n//   vendor         User      @relation(fields: [userId], references: [userId])\n// }\n//\n// model Menu {\n//   menuId       Int        @id @default(autoincrement())\n//   restaurantId Int\n//   menuName     String     @db.VarChar(200)\n//   description  String     @db.VarChar(500)\n//   isActive     Boolean    @default(false)\n//   menuItems    MenuItem[]\n//   createdAt    DateTime   @default(now())\n//   updatedAt    DateTime   @default(now())\n//   restaurant   Restaurant @relation(fields: [restaurantId], references: [restaurantId])\n// }\n//\n// model MenuItem {\n//   itemId          Int          @id @default(autoincrement())\n//   menuId          Int\n//   cartId          Int\n//   itemName        String       @db.VarChar(200)\n//   itemDescription String       @db.VarChar(500)\n//   itemCategory    ItemCategory\n//   image           String\n//   isVeg           Boolean      @default(false)\n//   isBestSeller    Boolean      @default(false)\n//   totalReviews    Int          @default(0)\n//   ratings         Float        @default(0)\n//   quantity        Int          @default(0)\n//   createdAt       DateTime     @default(now())\n//   updatedAt       DateTime     @default(now())\n//   menu            Menu         @relation(fields: [menuId], references: [menuId])\n//   cart            Cart         @relation(fields: [cartId], references: [cartId])\n// }\n//\n// model Cart {\n//   cartId       Int        @id @default(autoincrement())\n//   userId       Int\n//   restaurantId Int\n//   items        MenuItem[] // add quantity\n//   totalPrice   Int        @default(0)\n//   createdAt    DateTime   @default(now())\n//   updatedAt    DateTime   @default(now())\n// }\n//\n// model OrderedItem {\n//   orderItemId  Int      @id @default(autoincrement())\n//   orderId      Int\n//   menuItemId   Int\n//   quantity     Int      @default(1)\n//   totalPrice   Float\n//   createdAt    DateTime @default(now())\n//   updatedAt    DateTime @default(now())\n//   Order        Order?   @relation(fields: [orderOrderId], references: [orderId])\n//   orderOrderId Int?\n// }\n//\n// // understand why payment pe orderId map hota hai ?\n// model Order {\n//   orderId      Int           @id @default(autoincrement())\n//   customerId   Int\n//   restaurantId Int\n//   courierId    Int\n//   orderedItems OrderedItem[]\n//   orderStatus  OrderStatus   @default(PENDING)\n//   createdAt    DateTime      @default(now())\n//   User         User?         @relation(fields: [userUserId], references: [userId])\n//   userUserId   Int?\n// }\n//\n// model Payment {\n//   paymentId     Int           @id @default(autoincrement())\n//   userId        Int\n//   totalAmount   Int\n//   orderId       Int\n//   paymentStatus PaymentStatus @default(PENDING)\n//   createdAt     DateTime      @default(now())\n// }\n//\n// // orderStatus humesha order model mai hoga\n// model OrderTracking {\n//   trackingId     Int            @id @default(autoincrement())\n//   orderId        Int\n//   orderStatus    OrderStatus\n//   trackingStatus TrackingStatus\n//   updatedAt      DateTime       @default(now())\n// }\n//\n// model Review {\n//   reviewId     Int       @id @default(autoincrement())\n//   rating       Float     @default(0)\n//   review       String    @db.VarChar(500)\n//   userId       Int\n//   restaurantId Int\n//   comments     Comment[]\n//   createdAt    DateTime  @default(now())\n//   updatedAt    DateTime  @default(now())\n// }\n//\n// // parentCommentId\n// model Comment {\n//   commentId Int      @id @default(autoincrement())\n//   reviewId  Int\n//   comment   String   @db.VarChar(500)\n//   userId    Int\n//   replies   Reply[]\n//   createdAt DateTime @default(now())\n//   updatedAt DateTime @default(now())\n//   review    Review   @relation(fields: [reviewId], references: [reviewId])\n// }\n//\n// model Reply {\n//   replyId   Int      @id @default(autoincrement())\n//   commentId Int\n//   reply     String   @db.VarChar(500)\n//   userId    Int\n//   createdAt DateTime @default(now())\n//   updatedAt DateTime @default(now())\n//   comment   Comment  @relation(fields: [commentId], references: [commentId])\n// }\n//\n// model Notifications {\n//   notificationId     Int                @id @default(autoincrement())\n//   userId             Int\n//   message            String             @db.VarChar(200)\n//   notificationStatus NotificationStatus\n//   notificationType   NotificationType\n//   createdAt          DateTime           @default(now())\n//   customer           User?              @relation(\"CustomerNotifications\", fields: [userId], references: [userId])\n//   vendor             User?              @relation(\"VendorNotifications\", fields: [userId], references: [userId])\n//   courier            User?              @relation(\"CourierNotifications\", fields: [userId], references: [userId])\n// }\n\n// Defining Enums\nenum Role {\n  CUSTOMER\n  VENDOR\n  COURIER\n  ADMIN\n}\n\n// enum AddressType {\n//   HOME\n//   OFFICE\n//   OTHER\n// }\n//\n// enum ItemCategory {\n//   MAIN_COURSE\n//   DESSERT\n//   BEVERAGE\n//   SIDE\n//   APPETIZER\n// }\n//\n// enum CuisineType {\n//   INDIAN\n//   CHINESE\n//   ITALIAN\n//   MEXICAN\n//   JAPANESE\n//   FRENCH\n// }\n//\n// enum PaymentStatus {\n//   PENDING\n//   SUCCESS\n//   FAILED\n// }\n//\n// enum OrderStatus {\n//   PENDING\n//   COMPLETED\n//   CANCELLED\n// }\n//\n// enum TrackingStatus {\n//   Dispatched\n//   IN_TRANSIT\n//   DELIVERED\n// }\n//\n// enum CourierStatus {\n//   AVAILABLE\n//   BUSY\n//   OFFLINE\n// }\n//\n// enum NotificationStatus {\n//   UNREAD\n//   READ\n// }\n//\n// enum NotificationType {\n//   ORDER_UPDATE\n//   PROMOTION\n//   GENERAL\n// }\n",
  "inlineSchemaHash": "5b735a9fdbc00b4d3399dc82422ca22e284c0eb600a0704058a85884a2ba1922",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"dbName\":null,\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":true,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Int\",\"default\":{\"name\":\"autoincrement\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"firstName\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"lastName\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"email\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":true,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"password\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"role\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Role\",\"default\":\"CUSTOMER\",\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"DateTime\",\"default\":{\"name\":\"now\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"DateTime\",\"default\":{\"name\":\"now\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false}},\"enums\":{\"Role\":{\"values\":[{\"name\":\"CUSTOMER\",\"dbName\":null},{\"name\":\"VENDOR\",\"dbName\":null},{\"name\":\"COURIER\",\"dbName\":null},{\"name\":\"ADMIN\",\"dbName\":null}],\"dbName\":null}},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

